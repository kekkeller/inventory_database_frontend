import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    steps: {
        type: PropType<{
            title: string;
            text: string;
            imageSize?: string | undefined;
            imageCentered?: boolean | undefined;
            image?: string | undefined;
            status?: "complete" | "current" | "upcoming" | undefined;
        }[]>;
        required: true;
    };
}, {
    step: import("vue").Ref<number>;
    bulletStepItems: import("vue").Ref<{
        text: string;
        status: 'complete' | 'current' | 'upcoming';
    }[]>;
    fade: import("vue").Ref<boolean>;
    buttonText: import("vue").ComputedRef<"Done" | "Next">;
    currentStep: import("vue").ComputedRef<{
        title: string;
        text: string;
        imageSize?: string | undefined;
        imageCentered?: boolean | undefined;
        image?: string | undefined;
        status?: "complete" | "current" | "upcoming" | undefined;
    }>;
    nextStep: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "close-dialog"[], "close-dialog", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    steps: {
        type: PropType<{
            title: string;
            text: string;
            imageSize?: string | undefined;
            imageCentered?: boolean | undefined;
            image?: string | undefined;
            status?: "complete" | "current" | "upcoming" | undefined;
        }[]>;
        required: true;
    };
}>> & {
    "onClose-dialog"?: ((...args: any[]) => any) | undefined;
}, {}, {}>;
export default _default;
