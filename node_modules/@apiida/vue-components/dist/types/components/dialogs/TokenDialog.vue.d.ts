declare const _default: import("vue").DefineComponent<{
    token: {
        type: StringConstructor;
        default: string;
    };
    showDialog: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The title of the dialogue.
     */
    title: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    btnTitle: {
        type: StringConstructor;
        default: string;
    };
    btnText: {
        type: StringConstructor;
        default: string;
    };
    width: {
        type: NumberConstructor;
        default: number;
    };
    maxHeight: {
        type: NumberConstructor;
        default: number;
    };
}, {
    closeDialog: () => void;
    showTokenDialog: import("vue").Ref<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "close-dialog"[], "close-dialog", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    token: {
        type: StringConstructor;
        default: string;
    };
    showDialog: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The title of the dialogue.
     */
    title: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    btnTitle: {
        type: StringConstructor;
        default: string;
    };
    btnText: {
        type: StringConstructor;
        default: string;
    };
    width: {
        type: NumberConstructor;
        default: number;
    };
    maxHeight: {
        type: NumberConstructor;
        default: number;
    };
}>> & {
    "onClose-dialog"?: ((...args: any[]) => any) | undefined;
}, {
    title: string;
    text: string;
    width: number;
    maxHeight: number;
    showDialog: boolean;
    token: string;
    btnTitle: string;
    btnText: string;
}, {}>;
export default _default;
