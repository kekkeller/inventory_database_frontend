import { PropType } from 'vue';
import BtnPropsType from '../../helper/types/BtnPropsType';
import WizardStep from './WizardStep';
declare const _default: import("vue").DefineComponent<{
    /**
     * The width of the dialogue.
     */
    width: {
        type: NumberConstructor;
        default: number;
    };
    steps: {
        type: PropType<WizardStep[]>;
        required: true;
    };
    currentStep: {
        type: PropType<WizardStep>;
        required: true;
    };
    disableNextButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    showBackButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    showTitle: {
        type: BooleanConstructor;
        default: boolean;
    };
    classesSlot: {
        type: StringConstructor;
        default: string;
    };
    backBtnIcon: {
        type: StringConstructor;
        default: string;
    };
    secondaryBtn: {
        type: PropType<BtnPropsType>;
        default: () => {
            text: string;
            show: boolean;
            disable: boolean;
            icon: string;
            class: string;
        };
    };
}, {
    step: import("vue").Ref<number>;
    bulletStepItems: import("vue").Ref<{
        text: string;
        status: 'complete' | 'current' | 'upcoming';
    }[]>;
    fade: import("vue").Ref<boolean>;
    buttonIcon: import("vue").ComputedRef<string | undefined>;
    primaryButtonText: import("vue").ComputedRef<string | undefined>;
    buttonType: import("vue").ComputedRef<"button" | "submit" | undefined>;
    nextStep: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("submit" | "close-dialog" | "update:currentStep" | "update:disableNextButton" | "backBtn" | "secondaryBtn" | "primaryBtn")[], "submit" | "close-dialog" | "update:currentStep" | "update:disableNextButton" | "backBtn" | "secondaryBtn" | "primaryBtn", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * The width of the dialogue.
     */
    width: {
        type: NumberConstructor;
        default: number;
    };
    steps: {
        type: PropType<WizardStep[]>;
        required: true;
    };
    currentStep: {
        type: PropType<WizardStep>;
        required: true;
    };
    disableNextButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    showBackButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    showTitle: {
        type: BooleanConstructor;
        default: boolean;
    };
    classesSlot: {
        type: StringConstructor;
        default: string;
    };
    backBtnIcon: {
        type: StringConstructor;
        default: string;
    };
    secondaryBtn: {
        type: PropType<BtnPropsType>;
        default: () => {
            text: string;
            show: boolean;
            disable: boolean;
            icon: string;
            class: string;
        };
    };
}>> & {
    onSubmit?: ((...args: any[]) => any) | undefined;
    "onClose-dialog"?: ((...args: any[]) => any) | undefined;
    "onUpdate:currentStep"?: ((...args: any[]) => any) | undefined;
    "onUpdate:disableNextButton"?: ((...args: any[]) => any) | undefined;
    onBackBtn?: ((...args: any[]) => any) | undefined;
    onSecondaryBtn?: ((...args: any[]) => any) | undefined;
    onPrimaryBtn?: ((...args: any[]) => any) | undefined;
}, {
    width: number;
    disableNextButton: boolean;
    showBackButton: boolean;
    showTitle: boolean;
    classesSlot: string;
    backBtnIcon: string;
    secondaryBtn: BtnPropsType;
}, {}>;
export default _default;
