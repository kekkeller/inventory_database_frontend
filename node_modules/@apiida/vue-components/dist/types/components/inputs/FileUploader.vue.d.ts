import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    accept: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    defaultAvatar: {
        type: PropType<"file" | "rocket-dark-blue" | "rocket-light-blue" | "rocket-orange" | "rocket-purple" | "avatar">;
        default: string;
    };
    /**
     * The uploaded image will be displayed directly as a small avatar.
     */
    showImage: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * Sometimes there is no preview image for the file you upload.
     */
    showdefaultAvatar: {
        type: BooleanConstructor;
        default: boolean;
    };
    showBtnRemove: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFileName: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * Only displayed if showFileName is set to true. Is overwritten by the actual file name. Is displayed below the input.
     */
    forceFileName: {
        type: StringConstructor;
        default: string;
    };
    id: {
        type: StringConstructor;
        required: true;
    };
    label: {
        type: StringConstructor;
        required: true;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    required: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelValue: {
        type: PropType<string | Blob>;
        default: undefined;
    };
    /**
     * A small question mark icon will appear, which will display the text when you click on it.
     */
    infoLabelContent: {
        type: PropType<{
            title?: string | undefined;
            text: string;
            link?: string | undefined;
        } | undefined>;
        default: undefined;
    };
}, {
    fileName: import("vue").Ref<string>;
    clickFileUploadInput: () => void;
    removeImage: () => void;
    fileSelected: (event: Event) => void;
    image: import("vue").Ref<string>;
    path: import("vue").Ref<string>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "remove-image")[], "update:modelValue" | "remove-image", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    accept: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    defaultAvatar: {
        type: PropType<"file" | "rocket-dark-blue" | "rocket-light-blue" | "rocket-orange" | "rocket-purple" | "avatar">;
        default: string;
    };
    /**
     * The uploaded image will be displayed directly as a small avatar.
     */
    showImage: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * Sometimes there is no preview image for the file you upload.
     */
    showdefaultAvatar: {
        type: BooleanConstructor;
        default: boolean;
    };
    showBtnRemove: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFileName: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * Only displayed if showFileName is set to true. Is overwritten by the actual file name. Is displayed below the input.
     */
    forceFileName: {
        type: StringConstructor;
        default: string;
    };
    id: {
        type: StringConstructor;
        required: true;
    };
    label: {
        type: StringConstructor;
        required: true;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    required: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelValue: {
        type: PropType<string | Blob>;
        default: undefined;
    };
    /**
     * A small question mark icon will appear, which will display the text when you click on it.
     */
    infoLabelContent: {
        type: PropType<{
            title?: string | undefined;
            text: string;
            link?: string | undefined;
        } | undefined>;
        default: undefined;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    "onRemove-image"?: ((...args: any[]) => any) | undefined;
}, {
    required: boolean;
    placeholder: string;
    disabled: boolean;
    modelValue: string | Blob;
    defaultAvatar: "file" | "rocket-dark-blue" | "rocket-light-blue" | "rocket-orange" | "rocket-purple" | "avatar";
    infoLabelContent: {
        title?: string | undefined;
        text: string;
        link?: string | undefined;
    } | undefined;
    accept: string;
    showImage: boolean;
    showdefaultAvatar: boolean;
    showBtnRemove: boolean;
    showFileName: boolean;
    forceFileName: string;
}, {}>;
export default _default;
