declare const _default: import("vue").DefineComponent<{
    /**
     * Display the complexity of the password calculated by Zxcvbn.
     */
    showZxcvbnValidation: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The Score calculated by Zxcvbn. 0-4. 4 is very good
     */
    score: {
        type: NumberConstructor;
        default: number;
    };
    /**
     * The password must have this minimum complexity
     */
    minScore: {
        type: NumberConstructor;
        default: number;
    };
    /**
     * The minimum length of the password. Independent from Zxcvbn
     */
    minLength: {
        type: NumberConstructor;
        default: number;
    };
    styleLikeLoginScreen: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    password1: import("vue").Ref<string>;
    password2: import("vue").Ref<string>;
    passwordsMatch: import("vue").ComputedRef<boolean>;
    emitPassword: () => void;
    getScoreColorClass: (number: number) => string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("set-password" | "update-score")[], "set-password" | "update-score", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * Display the complexity of the password calculated by Zxcvbn.
     */
    showZxcvbnValidation: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The Score calculated by Zxcvbn. 0-4. 4 is very good
     */
    score: {
        type: NumberConstructor;
        default: number;
    };
    /**
     * The password must have this minimum complexity
     */
    minScore: {
        type: NumberConstructor;
        default: number;
    };
    /**
     * The minimum length of the password. Independent from Zxcvbn
     */
    minLength: {
        type: NumberConstructor;
        default: number;
    };
    styleLikeLoginScreen: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    "onSet-password"?: ((...args: any[]) => any) | undefined;
    "onUpdate-score"?: ((...args: any[]) => any) | undefined;
}, {
    minLength: number;
    showZxcvbnValidation: boolean;
    score: number;
    minScore: number;
    styleLikeLoginScreen: boolean;
}, {}>;
export default _default;
