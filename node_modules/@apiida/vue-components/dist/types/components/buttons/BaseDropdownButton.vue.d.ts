import { PropType } from 'vue';
import ListInputItem from '../inputs/ListInputItem';
declare const _default: import("vue").DefineComponent<{
    buttonType: {
        type: PropType<"Primary" | "Base">;
        default: string;
    };
    items: {
        type: PropType<ListInputItem[]>;
        default: () => never[];
    };
    menuWidth: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    buttonPadding: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    showBoarder: {
        type: BooleanConstructor;
        default: boolean;
    };
    zIndex: {
        type: StringConstructor;
        default: string;
    };
}, {
    hasSlot: (name: string | number) => boolean;
    getButtonType: () => string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "itemClicked"[], "itemClicked", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    buttonType: {
        type: PropType<"Primary" | "Base">;
        default: string;
    };
    items: {
        type: PropType<ListInputItem[]>;
        default: () => never[];
    };
    menuWidth: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    buttonPadding: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    showBoarder: {
        type: BooleanConstructor;
        default: boolean;
    };
    zIndex: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    onItemClicked?: ((...args: any[]) => any) | undefined;
}, {
    text: string;
    disabled: boolean;
    icon: string;
    buttonType: "Primary" | "Base";
    items: ListInputItem[];
    menuWidth: string;
    buttonPadding: string;
    showBoarder: boolean;
    zIndex: string;
}, {}>;
export default _default;
