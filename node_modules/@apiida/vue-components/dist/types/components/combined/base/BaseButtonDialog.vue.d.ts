import { PropType } from 'vue';
/**
 * Button and dialog in one
 */
declare const _default: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    /**
     * The title of the dialogue
     */
    title: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The width of the dialogue
     */
    width: {
        type: NumberConstructor;
        default: number;
    };
    /**
     * Change the current icon to a load indicator
     */
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    innerDialogButtonDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    innerDialogButtonShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    innerDialogButtonCaption: {
        type: StringConstructor;
        default: string;
    };
    /**
     * 'Primary' | 'Base'
     */
    innerDialogButtonType: {
        type: PropType<"Primary" | "Base" | "Delete">;
        default: string;
    };
    innerDialogButtonIcon: {
        type: StringConstructor;
        default: string;
    };
    openDialogButtonClasses: {
        type: StringConstructor;
        default: string;
    };
    openDialogButtonDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    openDialogButtonCaption: {
        type: StringConstructor;
        required: true;
    };
    openDialogButtonType: {
        type: PropType<"Primary" | "Base" | "Delete" | "SmallPrimary" | "SmallDelete" | "SmallBase">;
        default: string;
    };
    openDialogButtonIcon: {
        type: StringConstructor;
        default: string;
    };
}, {
    showDialog: import("vue").Ref<boolean>;
    openDialog: () => void;
    confirmDialog: () => void;
    closeDialog: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close-dialog" | "confirm-dialog" | "open-dialog")[], "close-dialog" | "confirm-dialog" | "open-dialog", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    /**
     * The title of the dialogue
     */
    title: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The width of the dialogue
     */
    width: {
        type: NumberConstructor;
        default: number;
    };
    /**
     * Change the current icon to a load indicator
     */
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    innerDialogButtonDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    innerDialogButtonShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    innerDialogButtonCaption: {
        type: StringConstructor;
        default: string;
    };
    /**
     * 'Primary' | 'Base'
     */
    innerDialogButtonType: {
        type: PropType<"Primary" | "Base" | "Delete">;
        default: string;
    };
    innerDialogButtonIcon: {
        type: StringConstructor;
        default: string;
    };
    openDialogButtonClasses: {
        type: StringConstructor;
        default: string;
    };
    openDialogButtonDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    openDialogButtonCaption: {
        type: StringConstructor;
        required: true;
    };
    openDialogButtonType: {
        type: PropType<"Primary" | "Base" | "Delete" | "SmallPrimary" | "SmallDelete" | "SmallBase">;
        default: string;
    };
    openDialogButtonIcon: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    "onClose-dialog"?: ((...args: any[]) => any) | undefined;
    "onConfirm-dialog"?: ((...args: any[]) => any) | undefined;
    "onOpen-dialog"?: ((...args: any[]) => any) | undefined;
}, {
    title: string;
    loading: boolean;
    width: number;
    innerDialogButtonDisabled: boolean;
    innerDialogButtonShow: boolean;
    innerDialogButtonCaption: string;
    innerDialogButtonType: "Primary" | "Base" | "Delete";
    innerDialogButtonIcon: string;
    openDialogButtonClasses: string;
    openDialogButtonDisabled: boolean;
    openDialogButtonType: "Primary" | "Base" | "Delete" | "SmallPrimary" | "SmallDelete" | "SmallBase";
    openDialogButtonIcon: string;
}, {}>;
export default _default;
