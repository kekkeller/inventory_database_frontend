import { PropType } from 'vue';
import RadioGroupItem from '../inputs/RadioGroupItem';
declare const _default: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
    iconClass: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The title of the dialogue.
     */
    title: {
        type: StringConstructor;
        default: string;
    };
    buttonCloseText: {
        type: StringConstructor;
        default: string;
    };
    buttonDoText: {
        type: StringConstructor;
        default: string;
    };
    /**
     * 'Primary' | 'Delete' '
     */
    buttonDoType: {
        type: PropType<"Primary" | "Delete">;
        default: string;
    };
    buttonCloseShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    items: {
        type: PropType<RadioGroupItem[]>;
        default: () => void;
    };
    /**
     * Sets the default value for the RadioGroup. If the value is left empty, the value of the first element from items is taken (items[0].value).
     */
    preSelectedItem: {
        type: StringConstructor;
        default: string;
    };
}, {
    selectedItem: import("vue").Ref<string>;
}, unknown, {}, {
    closeDialog(): void;
    doItAndClose(selectedItem: string): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close-dialog" | "do-it")[], "close-dialog" | "do-it", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
    iconClass: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The title of the dialogue.
     */
    title: {
        type: StringConstructor;
        default: string;
    };
    buttonCloseText: {
        type: StringConstructor;
        default: string;
    };
    buttonDoText: {
        type: StringConstructor;
        default: string;
    };
    /**
     * 'Primary' | 'Delete' '
     */
    buttonDoType: {
        type: PropType<"Primary" | "Delete">;
        default: string;
    };
    buttonCloseShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    items: {
        type: PropType<RadioGroupItem[]>;
        default: () => void;
    };
    /**
     * Sets the default value for the RadioGroup. If the value is left empty, the value of the first element from items is taken (items[0].value).
     */
    preSelectedItem: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    "onClose-dialog"?: ((...args: any[]) => any) | undefined;
    "onDo-it"?: ((...args: any[]) => any) | undefined;
}, {
    title: string;
    icon: string;
    items: RadioGroupItem[];
    iconClass: string;
    buttonCloseText: string;
    buttonDoText: string;
    buttonDoType: "Primary" | "Delete";
    buttonCloseShow: boolean;
    preSelectedItem: string;
}, {}>;
export default _default;
