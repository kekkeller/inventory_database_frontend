import { PropType } from 'vue';
import DropdownConfirmDialogType from './DropdownConfirmDialogType';
declare const _default: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    items: {
        type: PropType<DropdownConfirmDialogType[]>;
        default: () => never[];
    };
    preSetDeleteEntity: {
        type: PropType<{
            entity: string;
            name: string;
            callback: () => void;
        }>;
        default: undefined;
    };
}, {
    stuff: import("vue").Ref<{
        title: string;
        type: "Base" | "Danger";
        dialogText: string;
        btnConfrmText: string;
        btnCancelText: string;
        callback: () => void;
        id: string | number;
        text: string;
    }[]>;
    showDialog: import("vue").Ref<boolean>;
    selectItem: import("vue").Ref<DropdownConfirmDialogType | undefined>;
    selectItemFromList: (id: number) => void;
    confirmDialog: () => void;
    closeDialog: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    items: {
        type: PropType<DropdownConfirmDialogType[]>;
        default: () => never[];
    };
    preSetDeleteEntity: {
        type: PropType<{
            entity: string;
            name: string;
            callback: () => void;
        }>;
        default: undefined;
    };
}>>, {
    disabled: boolean;
    items: DropdownConfirmDialogType[];
    preSetDeleteEntity: {
        entity: string;
        name: string;
        callback: () => void;
    };
}, {}>;
export default _default;
