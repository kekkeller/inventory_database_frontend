/**
 * Button and dialog in one
 */
declare const _default: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    /**
     * Name of the entity to be deleted in title
     */
    entity: {
        type: StringConstructor;
        required: true;
    };
    /**
     * Name of the entity to be deleted in text
     */
    textEntity: {
        type: StringConstructor;
        default: string;
    };
    /**
     * Change the current icon to a load indicator
     */
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    showDeleteDialog: import("vue").Ref<boolean>;
    getTextEntity: () => string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "delete"[], "delete", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    /**
     * Name of the entity to be deleted in title
     */
    entity: {
        type: StringConstructor;
        required: true;
    };
    /**
     * Name of the entity to be deleted in text
     */
    textEntity: {
        type: StringConstructor;
        default: string;
    };
    /**
     * Change the current icon to a load indicator
     */
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    onDelete?: ((...args: any[]) => any) | undefined;
}, {
    disabled: boolean;
    loading: boolean;
    textEntity: string;
}, {}>;
export default _default;
